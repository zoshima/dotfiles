local c = require('colorscheme.colors')

local conf = {
  Normal = { fg = c.FG, bg = c.BG },
  ColorColumn = { fg = c.None, bg = c.CursorBG },
  Cursor = { fg = c.CursorFG, bg = c.CursorLightBG },
  CursorLine = { bg = c.CursorBG },
  CursorColumn = { fg = c.None, bg = c.CursorBG },
  Directory = { fg = c.BlueLight, bg = c.BG },
  DiffAdd = { fg = c.None, bg = c.GreenLight },
  DiffChange = { fg = c.None, bg = c.RedDark },
  DiffDelete = { fg = c.None, bg = c.RedLight },
  DiffText = { fg = c.None, bg = c.RedLight },
  EndOfBuffer = { fg = c.GreyDark },
  ErrorMsg = { fg = c.RedDark, bg = c.BG },
  Folded = { fg = c.None, bg = c.Slate },
  FoldColumn = { fg = c.GreyDark, bg = c.BG },
  SignColumn = { fg = c.None, bg = c.BG },
  IncSearch = { fg = c.None, bg = c.Slate },
  LineNr = { fg = c.GreyDark, bg = c.BG },
  CursorLineNr = { fg = c.FG, bg = c.BG },
  MatchParen = { fg = c.None, bg = c.CursorFG },
  ModeMsg = { fg = c.GreyLight },
  MoreMsg = { fg = c.FG, bg = c.Slate },
  NonText = { fg = c.GreyDark, bg = c.BG },
  Pmenu = { fg = c.FG, bg = c.Slate },
  PmenuSel = { fg = c.FG, bg = c.BG },
  PmenuSbar = { fg = c.None, bg = c.Slate },
  PmenuThumb = { fg = c.None, bg = c.FG },
  Question = { fg = c.BlueLight, bg = c.BG },
  SpecialKey = { fg = c.BlueLight, bg = c.None },
  VertSplit = { fg = c.GreyDark, bg = c.None },
  StatusLine = { fg = "#5b5b5b", bg = c.None },
  StatusLineNC = { fg = c.GreyDark },
  StatusLineFileName = { fg = c.FG },
  StatusLineModified = { fg = c.YellowOrange },
  Title = { fg = c.None, bg = c.None, bold = true },
  Visual = { fg = c.None, bg = c.Slate },
  VisualNOS = { fg = c.None, bg = c.Slate },
  WarningMsg = { fg = c.RedDark, bg = c.BG, bold = true },
  WildMenu = { fg = c.None, bg = c.Slate },

  -- syntax
  Comment = { fg = c.Comment, bg = c.None, italic = true },
  SpecialComment = { fg = c.Comment, bg = c.None },

  Include = { fg = c.Builtin, bg = c.None },
  Statement = { fg = c.Builtin, bg = c.None },
  Conditional = { fg = c.Builtin, bg = c.None },
  Repeat = { fg = c.Builtin, bg = c.None },
  Label = { fg = c.Builtin, bg = c.None },
  Exception = { fg = c.Builtin, bg = c.None },
  PreProc = { fg = c.Builtin, bg = c.None },
  Define = { fg = c.Builtin, bg = c.None },
  Macro = { fg = c.Builtin, bg = c.None },

  Keyword = { fg = c.Keyword, bg = c.None },

  Function = { fg = c.Function, bg = c.None },

  Constant = { fg = c.BlueLight, bg = c.None },
  Identifier = { fg = c.BlueLight, bg = c.None },
  StorageClass = { fg = c.BlueLight, bg = c.None },
  Structure = { fg = c.BlueLight, bg = c.None },
  Typedef = { fg = c.BlueLight, bg = c.None },

  String = { fg = c.OrangeDark, bg = c.None },
  Character = { fg = c.OrangeDark, bg = c.None },
  Number = { fg = c.GreenLight, bg = c.None },
  Boolean = { fg = c.GreenLight, bg = c.None },
  Float = { fg = c.GreenLight, bg = c.None },
  Operator = { fg = c.FG, bg = c.None },
  Type = { fg = c.Eucalyptus, bg = c.None },
  Special = { fg = c.YellowOrange, bg = c.None },
  SpecialChar = { fg = c.FG, bg = c.None },
  Tag = { fg = c.FG, bg = c.None },
  Delimiter = { fg = c.FG, bg = c.None },
  Debug = { fg = c.FG, bg = c.None },
  Underlined = { fg = c.None, bg = c.None, underline = true },
  Conceal = { fg = c.FG, bg = c.BG },
  Ignore = { fg = c.FG, bg = c.None },
  Error = { fg = c.RedLight, bg = c.BG, undercurl = true, sp = c.RedDark },
  Todo = { fg = c.YellowOrange, bg = c.BG, bold = true },
  SpellBad = { fg = c.RedDark, bg = c.BG, undercurl = true, sp = c.RedDark },
  SpellCap = { fg = c.RedDark, bg = c.BG, undercurl = true, sp = c.RedDark },
  SpellRare = { fg = c.RedDark, bg = c.BG, undercurl = true, sp = c.RedDark },
  SpellLocal = { fg = c.RedDark, bg = c.BG, undercurl = true, sp = c.RedDark },
  Whitespace = { fg = c.GreyDark },

  -- lsp
  LspDiagnosticsDefaultError = { fg = c.RedLight },
  LspDiagnosticsSignError = { fg = c.RedLight },
  LspDiagnosticsDefaultWarning = { fg = c.Function },
  LspDiagnosticsSignWarning = { fg = c.Function },

  -- nvim tree
  NvimTreeRootFolder = { fg = c.GreyLight },
  NvimTreeFolderName = { fg = c.BlueLight },
  NvimTreeOpenedFolderName = { fg = c.BlueLight },
  NvimTreeEmptyFolderName = { fg = c.BlueLight },
  NvimTreeSpecialFile = { fg = c.GreenLight },
  NvimTreeExecFile = { fg = c.RedLight },
  NvimTreeSymlink = { fg = c.OrangeDark },
  NvimTreeOpenedFile = { fg = c.Builtin },
  NvimTreeImageFile = { fg = c.Function },

  -- treesitter
  -- TSVariable = { fg = c.FG, bg = c.None },
  -- TSProperty = { fg = c.BlueLight, bg = c.None },
  TSConstBuiltin = { fg = c.GreenLight, bg = c.None },
}

for k, v in pairs(conf) do
  vim.api.nvim_set_hl(0, k, v)
end
